{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hewlett Packard\\\\Desktop\\\\projets\\\\adminglobaltv\\\\src\\\\variables\\\\PrivateRoutes.js\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isLoggedIn = localStorage.getItem(\"isLogged\");\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isLoggedIn === \"true\" ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 1\n}, this);\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Hewlett Packard/Desktop/projets/adminglobaltv/src/variables/PrivateRoutes.js"],"names":["Route","Redirect","isLoggedIn","localStorage","getItem","PrivateRoute","component","Component","rest","props","pathname","state","from","location"],"mappings":";AAAA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;AAEA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAnB;AACA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAE5B,QAAC,KAAD,OAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAD,IACrBP,UAAU,KAAK,MAAf,gBACE,QAAC,SAAD,OAAeO;AAAf;AAAA;AAAA;AAAA;AAAA,UADF,gBAEE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AACZC,MAAAA,QAAQ,EAAE,GADE;AAEZC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,QAFO;KAAMR,Y","sourcesContent":["import {Route ,Redirect} from 'react-router-dom'\r\n\r\nconst isLoggedIn = localStorage.getItem(\"isLogged\")\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    \r\n<Route {...rest} render={(props) => (\r\n    isLoggedIn === \"true\"\r\n    ? <Component {...props} />\r\n    : <Redirect to={{\r\n        pathname: '/',\r\n        state: { from: props.location }\r\n        }} />\r\n        \r\n)} />\r\n)\r\n"]},"metadata":{},"sourceType":"module"}