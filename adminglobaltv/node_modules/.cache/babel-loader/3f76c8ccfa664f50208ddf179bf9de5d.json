{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hewlett Packard\\\\Desktop\\\\projets\\\\adminglobaltv\\\\src\\\\variables\\\\piechartdevices.js\";\nimport React from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Group A',\n  value: 400\n}, {\n  name: 'Group B',\n  value: 300\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}];\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\nexport const Piechartdevics = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: data,\n          cx: \"50%\",\n          cy: \"50%\",\n          labelLine: false,\n          label: renderCustomizedLabel,\n          outerRadius: 80,\n          fill: \"#8884d8\",\n          dataKey: \"value\",\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Piechartdevics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piechartdevics\");","map":{"version":3,"sources":["C:/Users/Hewlett Packard/Desktop/projets/adminglobaltv/src/variables/piechartdevices.js"],"names":["React","PieChart","Pie","Sector","Cell","ResponsiveContainer","data","name","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","Piechartdevics","map","entry","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,mBAAtC,QAAiE,UAAjE;;AAGA,MAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADS,EAET;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFS,EAGT;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHS,EAIT;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJS,CAAb;AAOE,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf;AAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAL,GAAU,GAAzB;;AACA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,EAAN;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,WAApB;AAAiCC,EAAAA,WAAjC;AAA8CC,EAAAA,OAA9C;AAAuDC,EAAAA;AAAvD,CAAD,KAAoE;AAChG,QAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAf,IAA8B,GAA3D;AACA,QAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGV,IAAI,CAACY,GAAL,CAAS,CAACP,QAAD,GAAYN,MAArB,CAAxB;AACA,QAAMc,CAAC,GAAGT,EAAE,GAAGM,MAAM,GAAGV,IAAI,CAACc,GAAL,CAAS,CAACT,QAAD,GAAYN,MAArB,CAAxB;AAEA,sBACE;AAAM,IAAA,CAAC,EAAEY,CAAT;AAAY,IAAA,CAAC,EAAEE,CAAf;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,UAAU,EAAEF,CAAC,GAAGR,EAAJ,GAAS,OAAT,GAAmB,KAA9D;AAAqE,IAAA,gBAAgB,EAAC,SAAtF;AAAA,cACI,GAAE,CAACK,OAAO,GAAG,GAAX,EAAgBO,OAAhB,CAAwB,CAAxB,CAA2B;AADjC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAVD;;AAYF,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,sBACI;AAAA,2BACI,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAA,6BACJ,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,GAAjB;AAAsB,QAAA,MAAM,EAAE,GAA9B;AAAA,+BACE,QAAC,GAAD;AACE,UAAA,IAAI,EAAErB,IADR;AAEE,UAAA,EAAE,EAAC,KAFL;AAGE,UAAA,EAAE,EAAC,KAHL;AAIE,UAAA,SAAS,EAAE,KAJb;AAKE,UAAA,KAAK,EAAEO,qBALT;AAME,UAAA,WAAW,EAAE,EANf;AAOE,UAAA,IAAI,EAAC,SAPP;AAQE,UAAA,OAAO,EAAC,OARV;AAAA,oBAUGP,IAAI,CAACsB,GAAL,CAAS,CAACC,KAAD,EAAQT,KAAR,kBACR,QAAC,IAAD;AAA4B,YAAA,IAAI,EAAEX,MAAM,CAACW,KAAK,GAAGX,MAAM,CAACqB,MAAhB;AAAxC,aAAY,QAAOV,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvBM;KAAMO,c","sourcesContent":["import React from 'react'\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\n\r\n\r\nconst data = [\r\n    { name: 'Group A', value: 400 },\r\n    { name: 'Group B', value: 300 },\r\n    { name: 'Group C', value: 300 },\r\n    { name: 'Group D', value: 200 },\r\n  ];\r\n  \r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  \r\n  const RADIAN = Math.PI / 180;\r\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  \r\n    return (\r\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n        {`${(percent * 100).toFixed(0)}%`}\r\n      </text>\r\n    );\r\n  };\r\n\r\nexport const Piechartdevics = () => {\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={data}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            labelLine={false}\r\n            label={renderCustomizedLabel}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n          >\r\n            {data.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}